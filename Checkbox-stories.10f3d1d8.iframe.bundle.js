"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[392],{"./stories/Checkbox.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checked:()=>Checked,Default:()=>Default,Disabled:()=>Disabled,Indeterminate:()=>Indeterminate,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Checkbox",component:_src__WEBPACK_IMPORTED_MODULE_1__.Sc,argTypes:{label:{control:"text"},indeterminate:{control:"boolean"},checked:{control:"boolean"},disabled:{control:"boolean"}}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.Sc,{...args}),Default=Template.bind({});Default.args={label:"Default Checkbox",checked:!1,indeterminate:!1};const Checked=Template.bind({});Checked.args={label:"Checked Checkbox",checked:!0};const Indeterminate=Template.bind({});Indeterminate.args={label:"Indeterminate Checkbox",indeterminate:!0};const Disabled=Template.bind({});Disabled.args={label:"Disabled Checkbox",disabled:!0};const __namedExportsOrder=["Default","Checked","Indeterminate","Disabled"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"(args: CheckboxProps) => <Checkbox {...args} />",...Default.parameters?.docs?.source}}},Checked.parameters={...Checked.parameters,docs:{...Checked.parameters?.docs,source:{originalSource:"(args: CheckboxProps) => <Checkbox {...args} />",...Checked.parameters?.docs?.source}}},Indeterminate.parameters={...Indeterminate.parameters,docs:{...Indeterminate.parameters?.docs,source:{originalSource:"(args: CheckboxProps) => <Checkbox {...args} />",...Indeterminate.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"(args: CheckboxProps) => <Checkbox {...args} />",...Disabled.parameters?.docs?.source}}}}}]);
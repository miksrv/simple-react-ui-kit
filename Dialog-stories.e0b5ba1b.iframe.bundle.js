"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[583],{"./stories/Dialog.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),_src__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Dialog",component:_src__WEBPACK_IMPORTED_MODULE_2__.lG},Default=(args=>{const[isOpen,setIsOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),parentRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),handleClose=()=>setIsOpen(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{ref:parentRef,style:{position:"relative",height:300},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.$n,{onClick:()=>setIsOpen(!0),children:"Open Dialog"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_src__WEBPACK_IMPORTED_MODULE_2__.lG,{...args,open:isOpen,parentRef,onCloseDialog:handleClose,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{children:"This is the dialog content!"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_2__.$n,{onClick:handleClose,children:"Close Dialog"})]})]})}).bind({});Default.args={title:"Dialog Header",contentHeight:"200px",maxWidth:"400px",backLinkCaption:"Back",showOverlay:!0,showBackLink:!0,showCloseButton:!0,onBackClick:()=>alert("Back clicked!")};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const [isOpen, setIsOpen] = useState(false);\n  const parentRef = useRef<HTMLDivElement | null>(null);\n  const handleOpen = () => setIsOpen(true);\n  const handleClose = () => setIsOpen(false);\n  return <div ref={parentRef} style={{\n    position: 'relative',\n    height: 300\n  }}>\n            <Button onClick={handleOpen}>Open Dialog</Button>\n            <Dialog {...args} open={isOpen} parentRef={parentRef} onCloseDialog={handleClose}>\n                <p>This is the dialog content!</p>\n                <Button onClick={handleClose}>Close Dialog</Button>\n            </Dialog>\n        </div>;\n}",...Default.parameters?.docs?.source}}}}}]);
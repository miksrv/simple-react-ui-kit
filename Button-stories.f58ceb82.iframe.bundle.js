"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[303],{"./stories/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Outline:()=>Outline,Primary:()=>Primary,Sandbox:()=>Sandbox,Secondary:()=>Secondary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/jsx-runtime.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Button",component:_src__WEBPACK_IMPORTED_MODULE_1__.$n,argTypes:{mode:{control:{type:"select"},options:["primary","secondary","outline","link"],table:{defaultValue:{summary:"primary"},type:{summary:'"primary", "secondary", "outline", "link"'}}},size:{control:{type:"inline-radio"},options:["small","medium","large"],table:{type:{summary:'"small", "medium", "large"'}}},variant:{control:{type:"select"},options:["","positive","negative"],table:{type:{summary:'"positive", "negative", null'}}},icon:{control:{type:"select"},options:Object.keys(_src__WEBPACK_IMPORTED_MODULE_1__.kj).map((name=>name))},loading:{description:"Show loading spinner instead of button content",control:{type:"boolean"}},disabled:{description:"Disabled button content",control:{type:"boolean"}},stretched:{description:"Whether the button takes up the full width of the container",control:{type:"boolean"}},label:{control:{type:"text"}}}},Template=({buttons})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{display:"flex",gap:"10px"},children:buttons.map(((buttonProps,index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.$n,{...buttonProps,children:buttonProps.content},index)))}),Sandbox=(args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_src__WEBPACK_IMPORTED_MODULE_1__.$n,{...args,children:"Click me"})).bind({});Sandbox.args={mode:"primary",size:"medium"};const Primary=Template.bind({});Primary.args={buttons:[{mode:"primary",size:"medium",content:"Primary Medium"},{mode:"primary",size:"medium",content:"With icon",icon:"Map"},{mode:"primary",size:"medium",icon:"Settings"},{mode:"primary",size:"medium",label:"Loading...",loading:!0},{mode:"primary",size:"medium",content:"Disabled",disabled:!0},{mode:"primary",size:"medium",content:"Positive",variant:"positive"},{mode:"primary",size:"medium",content:"Negative",variant:"negative"}]},Primary.argTypes={buttons:{table:{disable:!0}}};const Secondary=Template.bind({});Secondary.args={buttons:[{mode:"secondary",size:"medium",content:"Primary Medium"},{mode:"secondary",size:"medium",content:"With icon",icon:"Map"},{mode:"secondary",size:"medium",icon:"Settings"},{mode:"secondary",size:"medium",label:"Loading...",loading:!0},{mode:"secondary",size:"medium",content:"Disabled",disabled:!0},{mode:"secondary",size:"medium",content:"Positive",variant:"positive"},{mode:"secondary",size:"medium",content:"Negative",variant:"negative"}]};const Outline=Template.bind({});Outline.args={buttons:[{mode:"outline",size:"medium",content:"Primary Medium"},{mode:"outline",size:"medium",content:"With icon",icon:"Map"},{mode:"outline",size:"medium",icon:"Settings"},{mode:"outline",size:"medium",label:"Loading...",loading:!0},{mode:"outline",size:"medium",content:"Disabled",disabled:!0},{mode:"outline",size:"medium",content:"Positive",variant:"positive"},{mode:"outline",size:"medium",content:"Negative",variant:"negative"}]};const __namedExportsOrder=["Sandbox","Primary","Secondary","Outline"];Sandbox.parameters={...Sandbox.parameters,docs:{...Sandbox.parameters?.docs,source:{originalSource:"(args: ButtonProps) => <Button {...args}>Click me</Button>",...Sandbox.parameters?.docs?.source}}},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"({\n  buttons\n}: ButtonGroupProps) => <div style={{\n  display: 'flex',\n  gap: '10px'\n}}>\n        {buttons.map((buttonProps, index) => <Button key={index} {...buttonProps}>\n                {buttonProps.content}\n            </Button>)}\n    </div>",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"({\n  buttons\n}: ButtonGroupProps) => <div style={{\n  display: 'flex',\n  gap: '10px'\n}}>\n        {buttons.map((buttonProps, index) => <Button key={index} {...buttonProps}>\n                {buttonProps.content}\n            </Button>)}\n    </div>",...Secondary.parameters?.docs?.source}}},Outline.parameters={...Outline.parameters,docs:{...Outline.parameters?.docs,source:{originalSource:"({\n  buttons\n}: ButtonGroupProps) => <div style={{\n  display: 'flex',\n  gap: '10px'\n}}>\n        {buttons.map((buttonProps, index) => <Button key={index} {...buttonProps}>\n                {buttonProps.content}\n            </Button>)}\n    </div>",...Outline.parameters?.docs?.source}}}}}]);